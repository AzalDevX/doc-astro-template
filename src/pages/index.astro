---
import Layout from '../layouts/Layout.astro';
import CodeBlock from '../components/CodeBlock.astro';
import WaveSeparator from '../components/WaveSeparator.astro';

const badges = [
  {
    src: "https://img.shields.io/badge/Astro-FF5D01?logo=astro&logoColor=white",
    alt: "Astro Badge",
    href: "https://astro.build"
  },
  {
    src: "https://img.shields.io/badge/Tailwind_CSS-38B2AC?logo=tailwind-css&logoColor=white",
    alt: "Tailwind CSS Badge",
    href: "https://tailwindcss.com"
  },
  {
    src: "https://img.shields.io/badge/GitHub_CLI-181717?logo=github&logoColor=white",
    alt: "GitHub CLI Badge",
    href: "https://cli.github.com"
  }
];

const requirements = [
  {
    name: "Node.js",
    version: "v14.16.0+",
    url: "https://nodejs.org/"
  },
  {
    name: "Git",
    url: "https://git-scm.com/"
  },
  {
    name: "GitHub CLI",
    url: "https://cli.github.com/"
  }
];

const commonErrors = [
  {
    error: "Error: Command not found 'gh'",
    title: "GitHub CLI no est√° instalado",
    solution: `# Windows (winget)
winget install GitHub.cli

# macOS
brew install gh

# Linux (Ubuntu/Debian)
sudo apt install gh`
  },
  {
    error: "Error: Not authenticated",
    title: "No autenticado en GitHub",
    description: "Necesitas autenticarte con GitHub CLI antes de usar create-astro-template:",
    solution: "gh auth login"
  },
  {
    error: "Error: Git not configured",
    title: "Git no configurado",
    description: "Configura tu nombre de usuario y email en Git:",
    solution: 'git config --global user.name "Tu Nombre"\ngit config --global user.email "tu@email.com"'
  }
];

const features = [
  {
    icon: "üé®",
    title: "Template Moderno",
    description: "Astro + Tailwind CSS preconfigurado y listo para usar."
  },
  {
    icon: "üîÑ",
    title: "Integraci√≥n GitHub",
    description: "Configuraci√≥n autom√°tica de repositorios con GitHub CLI."
  }
];

const nextSteps = [
  {
    icon: "üìö",
    title: "Documentaci√≥n",
    description: "Aprende m√°s sobre Astro en la documentaci√≥n oficial.",
    href: "https://docs.astro.build",
    gradient: "from-purple-500 to-blue-600"
  },
  {
    icon: "‚≠ê",
    title: "GitHub",
    description: "Dale una estrella al proyecto en GitHub.",
    href: "https://github.com/AzalDevX/create-astro-template",
    gradient: "from-pink-500 to-purple-600"
  }
];
---

<Layout title="Create Astro Template">
  <!-- Hero Section -->
  <div class="relative overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-br from-purple-500/10 via-blue-500/10 to-pink-500/10 blur-3xl"></div>
    <div class="relative max-w-7xl mx-auto px-4 pt-20 pb-16 sm:px-6 lg:px-8 lg:pt-32">
      <div class="text-center">
        <h1 
          class="text-4xl md:text-6xl font-bold bg-gradient-to-r from-purple-600 via-blue-600 to-pink-600 bg-clip-text text-transparent pb-2"
          data-aos="zoom-in"
        >
          Create Astro Template 
        </h1>
        <p class="bg-gradient-to-r from-purple-800 via-blue-800 to-pink-800 bg-clip-text text-transparent">by AzalDevX</p>
        <p 
          class="mt-6 text-lg md:text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto"
          data-aos="fade-up"
          data-aos-delay="100"
        >
          CLI futurista para crear proyectos Astro con integraci√≥n autom√°tica de GitHub.
        </p>
        
        <div 
          class="mt-8 flex justify-center gap-3"
          data-aos="fade-up"
          data-aos-delay="200"
        >
          {badges.map(badge => (
            <a href={badge.href} target="_blank" rel="noopener" class="hover:opacity-80 transition-opacity">
              <img src={badge.src || "/placeholder.svg"} alt={badge.alt} />
            </a>
          ))}
        </div>

        <div 
          class="mt-12 mb-16"
          data-aos="fade-up"
          data-aos-delay="300"
        >
          <CodeBlock 
            code="npx create-astro-template" 
            language="bash"
            className="max-w-lg mx-auto text-lg"
          />
        </div>
      </div>
    </div>
    
    <WaveSeparator />
  </div>

  <!-- Main Content -->
  <main class="bg-white dark:bg-gray-900 relative z-10">
    <div class="max-w-4xl mx-auto px-4 py-16">
      <!-- Requirements -->
      <section class="mb-24">
        <h2 
          class="text-3xl font-bold mb-8"
          data-aos="fade-up"
        >
          Requisitos Previos
        </h2>
        <div class="grid sm:grid-cols-3 gap-6">
          {requirements.map(({ name, version, url }, index) => (
            <a 
              href={url}
              target="_blank"
              rel="noopener"
              data-aos="fade-up"
              data-aos-delay={index * 100}
              class="p-6 rounded-xl bg-gray-50 dark:bg-gray-800/50 hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-300"
            >
              <h3 class="font-semibold text-xl mb-2">
                {name}
              </h3>
              {version && <p class="text-gray-600 dark:text-gray-400">{version}</p>}
            </a>
          ))}
        </div>
      </section>

      <!-- Quick Start -->
      <section class="mb-24">
        <h2 
          class="text-3xl font-bold mb-8"
          data-aos="fade-up"
        >
          Inicio R√°pido
        </h2>
        <div class="space-y-6">
          {[
            { title: "1. Crear nuevo proyecto", code: "npx create-astro-template" },
            { title: "2. Navegar al directorio", code: "cd my-project" },
            { title: "3. Iniciar desarrollo", code: "npm run dev" }
          ].map((step, index) => (
            <div 
              class="rounded-xl border border-gray-200 dark:border-gray-800 overflow-hidden"
              data-aos="fade-up"
              data-aos-delay={index * 100}
            >
              <div class="p-6">
                <h3 class="font-semibold text-xl mb-4">{step.title}</h3>
                <CodeBlock code={step.code} />
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Common Errors -->
      <section class="mb-24">
        <h2 
          class="text-3xl font-bold mb-8"
          data-aos="fade-up"
        >
          Soluci√≥n de Problemas
        </h2>
        <div class="space-y-6">
          {commonErrors.map(({ error, title, description, solution }, index) => (
            <div 
              class="rounded-xl border border-gray-200 dark:border-gray-800 overflow-hidden"
              data-aos="fade-up"
              data-aos-delay={index * 100}
            >
              <div class="border-b border-gray-200 dark:border-gray-800 bg-gray-50 dark:bg-gray-800/50 px-6 py-3">
                <span class="text-red-500 font-mono text-sm">{error}</span>
              </div>
              <div class="p-6">
                <h3 class="font-semibold text-xl mb-4">{title}</h3>
                <div class="space-y-4">
                  {description && (
                    <p class="text-gray-600 dark:text-gray-400 mb-4">
                      {description}
                    </p>
                  )}
                  <CodeBlock code={solution} />
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Features -->
      <section class="mb-24">
        <h2 
          class="text-3xl font-bold mb-8"
          data-aos="fade-up"
        >
          Caracter√≠sticas Principales
        </h2>
        <div class="grid sm:grid-cols-2 gap-6">
          {features.map((feature, index) => (
            <div 
              class="p-6 rounded-xl bg-gray-50 dark:bg-gray-800/50"
              data-aos={index === 0 ? "fade-right" : "fade-left"}
            >
              <div class="text-2xl mb-4">{feature.icon}</div>
              <h3 class="font-semibold text-xl mb-2">{feature.title}</h3>
              <p class="text-gray-600 dark:text-gray-400">
                {feature.description}
              </p>
            </div>
          ))}
        </div>
      </section>

      <!-- Next Steps (CTAs) -->
      <section>
        <h2 
          class="text-3xl font-bold mb-8"
          data-aos="fade-up"
        >
          Siguientes Pasos
        </h2>
        <div class="grid sm:grid-cols-2 gap-6">
          {nextSteps.map((step, index) => (
            <a 
              href={step.href}
              target="_blank"
              rel="noopener"
              data-aos={index === 0 ? "zoom-in-right" : "zoom-in-left"}
              class={`group relative overflow-hidden p-8 rounded-xl bg-gradient-to-br ${step.gradient} text-white shadow-xl hover:shadow-2xl transition-all duration-300 hover:-translate-y-1`}
            >
              <div class="absolute inset-0 bg-white opacity-0 group-hover:opacity-10 transition-opacity duration-300"></div>
              <h3 class="font-semibold text-2xl mb-3 flex items-center gap-2">
                {step.icon} {step.title}
                <svg 
                  xmlns="http://www.w3.org/2000/svg" 
                  class="h-6 w-6 transform group-hover:translate-x-1 transition-transform duration-300" 
                  fill="none" 
                  viewBox="0 0 24 24" 
                  stroke="currentColor"
                >
                  <path 
                    stroke-linecap="round" 
                    stroke-linejoin="round" 
                    stroke-width="2" 
                    d="M13 7l5 5m0 0l-5 5m5-5H6"
                  />
                </svg>
              </h3>
              <p class="text-white/90">
                {step.description}
              </p>
            </a>
          ))}
        </div>
      </section>
    </div>
  </main>
</Layout>